{"version":3,"sources":["webpack:///./src/components/hero.js","webpack:///./src/components/about.js","webpack:///./src/components/projects.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Hello","styled","div","_templateObject","helloWave","keyframes","_templateObject2","Wave","Img","_templateObject3","WaveContainer","_templateObject4","Greetings","_templateObject5","Name","_templateObject6","Hero","_ref","_data$0$node","data","node","frontmatter","html","react_default","a","createElement","Fragment","data-aos","title","fluid","wave","childImageSharp","alt","style","width","height","dangerouslySetInnerHTML","__html","propTypes","PropTypes","array","isRequired","AboutMe","about_templateObject","Avatar","about_templateObject2","Description","about_templateObject3","About","avatar","ProjectsTitle","projects_templateObject","Projects","projects_templateObject2","IndexPage","componentDidMount","AOS","init","duration","render","this","props","layout","seo","keywords","hero","edges","about","projects","React","Component","object","__webpack_exports__","gatsby_browser_entry","query","pages_IndexPage","_1055731641","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","string","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","HeaderStyled","header","LinkStyled","Link","Header","siteTitle","to","Container","layout_templateObject","Main","layout_templateObject2","Layout","Date","getFullYear","_755544856"],"mappings":"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","file":"component---src-pages-index-js-01e85e7bd8ff0d87b2db.js","sourcesContent":["import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image';\n\nconst Hello = styled.div`\n  @media only screen and (max-width: 600px) {\n    padding-top: 0px;\n    font-size: 3em;\n  }\n  padding-top: 50px;\n  font-size: 5em;\n  font-style: italic; \n  display: inline-block;\n`;\n\nconst helloWave = keyframes`\n  0% { transform: rotate(  0.0deg) }\n  10% { transform: rotate(-10.0deg) }\n  20% { transform: rotate( 12.0deg) }\n  30% { transform: rotate(-10.0deg) }\n  40% { transform: rotate(  9.0deg) }\n  50% { transform: rotate(  0.0deg) }\n  100% { transform: rotate(  0.0deg) }\n`;\n\nconst Wave = styled(Img)`\n  animation-name: ${helloWave};\n  animation-duration: 2.5s;\n  animation-iteration-count: infinite;\n  transform-origin: 70% 70%;\n  // display: inline-block;\n`;\n\nconst WaveContainer = styled.div`\n  // display: inline-block;\n`;\n\nconst Greetings = styled.div`\n  @media only screen and (max-width: 600px) {\n    font-size: 1.2em;\n  }\n  font-size: 1.7em;\n  max-width: 700px;\n  display: inline-block;\n  padding-top: 20px;\n`;\n\nconst Name = styled.div`\n  font-weight: bold;\n  display: inline-block;\n`;\n\nconst Hero = ({ data }) => {\n  const { frontmatter, html } = data[0].node;\n  return (      \n    <>\n        <Hello data-aos='flip-right'>{frontmatter.title}</Hello>\n        <WaveContainer data-aos='fade-in'>\n          <Wave fluid={frontmatter.wave.childImageSharp.fluid} alt=\"hello\" style={{width: `7%`, height: `7%`}}/>\n        </WaveContainer>\n        <Greetings data-aos='fade-in'>\n          I'm&nbsp;<Name>Katrina Tantay.&nbsp;</Name>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </Greetings>\n    </>\n  );\n};\n\nHero.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default Hero;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\n\n\nconst AboutMe = styled.div`\n  @media only screen and (max-width: 600px) {\n    padding-top: 180px;\n    font-size: 4em;\n  }\n  padding-top: 270px;  \n  font-size: 5em;\n  font-style: italic;\n`;\n\nconst Avatar = styled(Img)`\n  // display: inline-block;\n  // padding: 20px;\n`;\n\nconst Description = styled.div`\n  @media only screen and (max-width: 600px) {\n    font-size: 1em;\n  }\n  font-size: 1.2em;\n  display: inline-block;\n  // max-width: 700px;\n`;\n\nconst About = ({ data }) => {\n  const { frontmatter, html } = data[0].node;\n  return (\n    <>\n      <AboutMe data-aos='fade-in'>{frontmatter.title}</AboutMe>\n      <Avatar fluid={frontmatter.avatar.childImageSharp.fluid} alt='avatar' style={{\n        width: `15%`,\n        height: `20%`\n      }}\n      />\n      <Description data-aos='fade-in'>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </Description>\n    </>\n  );\n};\n\nAbout.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default About;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst ProjectsTitle = styled.div`\n  @media only screen and (max-width: 600px) {\n    padding-top: 180px;\n    font-size: 4em;\n  }\n  padding-top: 270px;  \n  font-size: 5em;\n  font-style: italic;\n`;\n\nconst Project = styled.div`\n  @media only screen and (max-width: 600px) {\n    font-size: 1em;\n  }\n  font-size: 1.2em;\n  display: inline-block;\n  // max-width: 700px;\n`;\n\nconst Projects = ({ data }) => {\n  const { frontmatter, html } = data[0].node;\n  return (\n    <>\n      <ProjectsTitle data-aos='fade-in'>{frontmatter.title}</ProjectsTitle>\n      \n    </>\n  );\n};\n\nProjects.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default Projects;\n","import React from \"react\"\nimport { graphql, StaticQuery } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nimport Layout from \"../components/layout\"\nimport Hero from \"../components/hero\"\nimport About from \"../components/about\"\nimport Projects from \"../components/projects\";\nimport SEO from \"../components/seo\"\n\nimport \"../layouts/index.css\";\n\nclass IndexPage extends React.Component {\n  componentDidMount(){\n    AOS.init({\n      duration : 3000\n    })\n  }\n  \n  render() {\n    const data = this.props.data;\n    return (\n      <Layout>\n        <SEO title=\"hello there.\" keywords={[`katrina`, `lou`, `samsin`, 'tantay', 'gatsby', 'portfolio']} />\n        <Hero data={data.hero.edges}/>\n        <About data={data.about.edges}/>\n        <Projects data={data.projects.edges}/>\n      </Layout>\n    );\n  }\n}\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\n// export default IndexPage\nexport default (props) => (\n  <StaticQuery\n    query={graphql `\n    {\n      hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n        edges {\n          node {\n            frontmatter {\n              title\n              wave {\n                childImageSharp {\n                  fluid( quality: 100) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n            html\n          }\n        }\n      }\n      projects: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/projects/\" } }) {\n        edges {\n          node {\n            frontmatter {\n              title\n            }\n            html\n          }\n        }\n      }\n      about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n        edges {\n          node {\n            frontmatter {\n              title\n              avatar {\n                childImageSharp {\n                  fluid( quality: 100) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n            html\n          }\n        }\n      }\n    }\n    `}\n    render={ data => (\n      <IndexPage data={data}/>\n    )\n  }\n  />\n);\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport styled from 'styled-components'\n\nconst HeaderStyled = styled.header`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-content: flex-end;\n  justify-content: flex-end;\n  align-items: flex-end;\n`;\n\nconst LinkStyled = styled(Link)`\n  font-size: 1.2em;\n  padding: 10px;\n  margin: 0;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <>\n  <HeaderStyled>\n    <LinkStyled to=\"./about\">\n      About\n    </LinkStyled>\n    {/* <LinkStyled to=\"/projects\">\n      Projects\n    </LinkStyled>\n    <LinkStyled to=\"/skills\">\n      Skills\n    </LinkStyled> */}\n    <LinkStyled to=\"/contact\">\n      Contact\n    </LinkStyled>\n  </HeaderStyled>\n  </>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from 'styled-components'\n\nimport Header from \"./header\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-around;\n\n  padding: 120px 100px;\n  max-width: 1440px;\n  margin: 0 auto;\n`;\n\nconst Main = styled.div`\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <Container>\n          <Main>{children}</Main>\n      </Container>\n      <footer>\n      © {new Date().getFullYear()}, kat3samsin\n      </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}