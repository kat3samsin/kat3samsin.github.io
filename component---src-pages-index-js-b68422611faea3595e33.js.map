{"version":3,"sources":["webpack:///./src/components/home.js","webpack:///./src/components/about.js","webpack:///./src/components/projects.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Home","styled","_ref","className","props","useSpring","opacity","marginTop","from","react_default","a","createElement","gatsby_browser_entry","query","render","data","imageData","desktop","childImageSharp","fluid","gatsby_background_image_default","Tag","backgroundColor","style","width","web","div","_2740269754","_templateObject","About","height","_3824586948","about_templateObject","Projects","_1123788401","projects_templateObject","IndexPage","scroll","to","_this","DOMnode","scrollTo","getRef","node","_this2","this","layout","seo","title","keywords","renderprops_addons","pages","ref","config","slow","horizontal","scrolling","offset","caption","speed","onClick","home","about","projects","React","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","margin","color","fontSize","textDecoration","paddingRight","Layout","Fragment","header","_755544856"],"mappings":"iZAOA,IA2CeA,EARFC,YAnCa,SAAAC,GAAmB,IAAhBC,EAAgBD,EAAhBC,UACrBC,EAAQC,YAAU,CAACC,QAAS,EAAGC,UAAW,IAAKC,KAAM,CAACF,QAAS,EAAGC,WAAW,OACnF,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaC,MAAK,aAWjBC,OAAQ,SAAAC,GAEN,IAAMC,EAAYD,EAAKE,QAAQC,gBAAgBC,MAC/C,OACGV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAiBW,IAAI,UACJlB,UAAWA,EACXgB,MAAOH,EACPM,gBAAe,WAE9Bb,EAAAC,EAAAC,cAAA,OAAKR,UAAU,gBAAgBoB,MAAO,CAACC,MAAO,MAC5Cf,EAAAC,EAAAC,cAACc,EAAA,EAASC,IAAV,CAAcH,MAAQnB,GACpBK,EAAAC,EAAAC,cAAA,OAAKR,UAAU,SAAf,oBAtBZY,KAAAY,KAgCS1B,CAAH2B,gNCnCV,IA2CeC,EARD5B,YAnCY,SAAAC,GAAmB,IAAhBC,EAAgBD,EAAhBC,UACrBC,EAAQC,YAAU,CAACC,QAAS,EAAGC,UAAW,IAAKC,KAAM,CAACF,QAAS,EAAGC,WAAW,OACnF,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaC,MAAK,aAWjBC,OAAQ,SAAAC,GAEN,IAAMC,EAAYD,EAAKE,QAAQC,gBAAgBC,MAC/C,OACGV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAiBW,IAAI,UACJlB,UAAWA,EACXgB,MAAOH,EACPM,gBAAe,WAE9Bb,EAAAC,EAAAC,cAAA,OAAKR,UAAU,gBAAgBoB,MAAO,CAACO,OAAQ,MAC7CrB,EAAAC,EAAAC,cAACc,EAAA,EAASC,IAAV,CAAcH,MAAQnB,GACpBK,EAAAC,EAAAC,cAAA,OAAKR,UAAU,SAAf,iBAtBZY,KAAAgB,KAgCU9B,CAAH+B,gNCnCX,IA4CeC,EAREhC,YApCS,SAAAC,GAAmB,IAAhBC,EAAgBD,EAAhBC,UACrBC,EAAQC,YAAU,CAACC,QAAS,EAAGC,UAAW,IAAKC,KAAM,CAACF,QAAS,EAAGC,WAAW,OACnF,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaC,MAAK,aAWjBC,OAAQ,SAAAC,GAEN,IAAMC,EAAYD,EAAKE,QAAQC,gBAAgBC,MAC/C,OACGV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAiBW,IAAI,UACJlB,UAAWA,EACXgB,MAAOH,EACPM,gBAAe,WAE9Bb,EAAAC,EAAAC,cAAA,OAAKR,UAAU,gBAAgBoB,MAAO,CAACO,OAAQ,MAC7CrB,EAAAC,EAAAC,cAACc,EAAA,EAASC,IAAV,CAAcH,MAAQnB,GACpBK,EAAAC,EAAAC,cAAA,OAAKR,UAAU,SAAf,iBAtBZY,KAAAmB,KAiCajC,CAAHkC,uBC/BRC,sJACJC,OAAS,SAAAC,GAAE,OAAIC,EAAKC,QAAQC,SAASH,MACrCI,OAAS,SAAAC,GACPJ,EAAKC,QAAUG,iCAEjB7B,OAAA,WAAS,IAAA8B,EAAAC,KACP,OACEpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,MAAM,eAAeC,SAAU,0BAA6B,SAAU,SAAU,eACrFxC,EAAAC,EAAAC,cAACuC,EAAA,SAAD,CAAUC,MAAO,EAAGC,IAAKP,KAAKH,OAAQW,OAAQA,IAAOC,KAAMC,YAAU,EAACC,WAAW,GAC/E/C,EAAAC,EAAAC,cAACuC,EAAA,cAAD,CAAeO,OAAQ,EAAGC,QAAQ,OAAOC,MAAO,IAAMC,QAAS,kBAAMhB,EAAKP,OAAO,KAC/E5B,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAAA,OAAKR,UAAU,OACbM,EAAAC,EAAAC,cAAA,UAAQiD,QAAS,kBAAIhB,EAAKP,OAAO,KAAjC,SAEF5B,EAAAC,EAAAC,cAAA,OAAKR,UAAU,SAAf,wBAEFM,EAAAC,EAAAC,cAACuC,EAAA,cAAD,CAAeO,OAAQ,EAAGC,QAAQ,QAAQC,MAAO,IAAMC,QAAS,kBAAMhB,EAAKP,OAAO,KAChF5B,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAAA,OAAKR,UAAU,SAAf,sQAQFM,EAAAC,EAAAC,cAACuC,EAAA,cAAD,CAAeO,OAAQ,EAAGC,QAAQ,WAAWC,MAAO,IAAMC,QAAS,kBAAMhB,EAAKP,OAAO,KACnF5B,EAAAC,EAAAC,cAACoD,EAAD,aA5BYC,IAAMC,WAoCf7B,8CChDf8B,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAlE,IAAAwD,EAAA,SAaMW,EAAqBb,IAAMc,cAAc,IAEzCT,EAAc,SAAAjE,GAAK,OACvBmE,EAAA7D,EAAAC,cAACkE,EAAmBE,SAApB,KACG,SAAAC,GACC,OACE5E,EAAMW,MACLiE,EAAgB5E,EAAMS,QAAUmE,EAAgB5E,EAAMS,OAAOE,MAEtDX,EAAMU,QAAUV,EAAM6E,UAC5B7E,EAAMW,KAAOX,EAAMW,KAAKA,KAAOiE,EAAgB5E,EAAMS,OAAOE,MAGvDwD,EAAA7D,EAAAC,cAAA,uCA4Bf0D,EAAYa,UAAY,CACtBnE,KAAMoE,IAAUC,OAChBvE,MAAOsE,IAAUE,OAAOC,WACxBxE,OAAQqE,IAAUI,KAClBN,SAAUE,IAAUI,2BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,gLCMzCK,EAAmB,SAAA3F,GAAkB,IAAf4F,EAAe5F,EAAf4F,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIE/B,IAAMrD,cAAcwF,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,6GCbf,SAASW,EAATtG,GAA2D,IAA5CuG,EAA4CvG,EAA5CuG,YAAaC,EAA+BxG,EAA/BwG,KAAMC,EAAyBzG,EAAzByG,KAAM1D,EAAmB/C,EAAnB+C,SAAUD,EAAS9C,EAAT8C,MACxC4D,EADiDC,EAAA9F,KACjD6F,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAtG,EAAAC,cAACsG,EAAAvG,EAAD,CACEwG,eAAgB,CACdR,QAEF1D,MAAOA,EACPmE,cAAa,QAAUP,EAAKG,aAAa/D,MACzC2D,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASrE,GAEX,CACEsE,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASrE,GAEX,CACEoE,KAAI,sBACJC,QAASP,IAGVU,OACCvE,EAASwE,OAAS,EACd,CACEL,KAAI,WACJC,QAASpE,EAASyE,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACN1D,SAAU,GACVwD,YAAW,IAGbD,EAAItB,UAAY,CACduB,YAAatB,IAAUE,OACvBqB,KAAMvB,IAAUE,OAChBsB,KAAMxB,IAAUyC,QAAQzC,IAAUC,QAClCnC,SAAUkC,IAAUyC,QAAQzC,IAAUE,QACtCrC,MAAOmC,IAAUE,OAAOC,YAGXkB,6OC9FTqB,EAAS,SAAA3H,KAAG4H,UAAH,OACbrH,EAAAC,EAAAC,cAAA,UACEY,MAAO,IAMPd,EAAAC,EAAAC,cAAA,OAAKY,MAAO,CAAEwG,OAAQ,IACpBtH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0B,GAAG,SACHf,MAAO,CACLyG,MAAK,QACLC,SAAQ,MACRC,eAAc,YACdC,aAAY,SANhB,SAWA1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0B,GAAG,YACHf,MAAO,CACLyG,MAAK,QACLC,SAAQ,MACRC,eAAc,YACdC,aAAY,SANhB,eAeNN,EAAO3C,UAAY,CACjB4C,UAAW3C,IAAUE,QAGvBwC,EAAOF,aAAe,CACpBG,UAAS,IAGID,QCjCTO,UAAS,SAAAlI,GAAA,IAAG+E,EAAH/E,EAAG+E,SAAH,OACbxE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACE5H,EAAAC,EAAAC,cAAC2H,EAAD,CAAQR,UAAW/G,EAAK6F,KAAKG,aAAa/D,QAC1CvC,EAAAC,EAAAC,cAAA,OACEY,MAAO,IAOPd,EAAAC,EAAAC,cAAA,YAAOsE,MArBflE,KAAAwH,MAiCFH,EAAOlD,UAAY,CACjBD,SAAUE,IAAUxC,KAAK2C,YAGZ8C","file":"component---src-pages-index-js-b68422611faea3595e33.js","sourcesContent":["import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\n\nimport BackgroundImage from 'gatsby-background-image'\nimport {useSpring, animated} from 'react-spring'\n\nconst BackgroundSection = ({ className }) => {\n  const props = useSpring({opacity: 1, marginTop: 250, from: {opacity: 0, marginTop:-1000}});\n  return (\n    <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"1.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={data => {\n       // Set ImageData.\n       const imageData = data.desktop.childImageSharp.fluid\n       return (\n          <BackgroundImage Tag=\"section\"\n                           className={className}\n                           fluid={imageData}\n                           backgroundColor={`#D4D4DF`}\n          >\n            <div className='textContainer' style={{width: 650}}>\n              <animated.div style={ props }>\n                <div className='title'>hello there.</div>\n              </animated.div>\n            </div>\n          </BackgroundImage>\n       )\n     }\n     }\n    />\n)}\n\nconst Home = styled(BackgroundSection)`\n  width: 100%;\n  height: 100%;\n  background-position: center;\n  background-repeat: repeat-y;\n  background-size: cover;\n`\n\nexport default Home","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\n\nimport BackgroundImage from 'gatsby-background-image'\nimport {useSpring, animated} from 'react-spring'\n\nconst BackgroundSection = ({ className }) => {\n  const props = useSpring({opacity: 1, marginTop: 250, from: {opacity: 0, marginTop:-1000}});\n  return (\n    <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"2.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={data => {\n       // Set ImageData.\n       const imageData = data.desktop.childImageSharp.fluid\n       return (\n          <BackgroundImage Tag=\"section\"\n                           className={className}\n                           fluid={imageData}\n                           backgroundColor={`#D4D4DF`}\n          >\n            <div className='textContainer' style={{height: 650}}>\n              <animated.div style={ props }>\n                <div className='title'>about me.</div>\n              </animated.div>\n            </div>\n          </BackgroundImage>\n       )\n     }\n     }\n    />\n)}\n\nconst About = styled(BackgroundSection)`\n  width: 100%;\n  height: 100%;\n  background-position: bottom center;\n  background-repeat: repeat-y;\n  background-size: cover;\n`\n\nexport default About","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\n\nimport BackgroundImage from 'gatsby-background-image'\nimport {useSpring, animated} from 'react-spring'\n\nconst BackgroundSection = ({ className }) => {\n  const props = useSpring({opacity: 1, marginTop: 250, from: {opacity: 0, marginTop:-1000}});\n  return(\n    <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"3.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={data => {\n       // Set ImageData.\n       const imageData = data.desktop.childImageSharp.fluid\n       return (\n          <BackgroundImage Tag=\"section\"\n                           className={className}\n                           fluid={imageData}\n                           backgroundColor={`#D4D4DF`}\n          >\n            <div className='textContainer' style={{height: 650}}>\n              <animated.div style={ props }>\n                <div className='title'>projects.</div>\n                \n              </animated.div>\n            </div>\n          </BackgroundImage>\n       )\n     }\n     }\n    />\n)}\n\nconst Projects = styled(BackgroundSection)`\n  width: 100%;\n  height: 100%;\n  background-position: bottom center;\n  background-repeat: repeat-y;\n  background-size: cover;\n`\n\nexport default Projects","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Home from \"../components/home\"\nimport About from \"../components/about\"\nimport Projects from \"../components/projects\"\nimport SEO from \"../components/seo\"\n\n// import {useSpring, animated} from 'react-spring'\nimport {Parallax, ParallaxLayer} from 'react-spring/renderprops-addons'\nimport {config} from 'react-spring'\n\nclass IndexPage extends React.Component {\n  scroll = to => this.DOMnode.scrollTo(to)\n  getRef = node => {\n    this.DOMnode = node\n  }\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"hello there.\" keywords={[`katrina`, `lou`, `samsin`, 'tantay', 'gatsby', 'portfolio']} />\n        <Parallax pages={3} ref={this.getRef} config={config.slow} horizontal scrolling={false}>\n          <ParallaxLayer offset={0} caption=\"home\" speed={0.25} onClick={() => this.scroll(1)}>\n            <Home />\n            <div className='btn'>\n              <button onClick={()=>this.scroll(1)}>next</button>\n            </div>\n            <div className='quote'>i'm a web developer</div>\n          </ParallaxLayer>\n          <ParallaxLayer offset={1} caption=\"about\" speed={0.25} onClick={() => this.scroll(2)}>\n            <About />\n            <div className='quote'>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n              Sed accumsan nulla in feugiat interdum. Maecenas ex sapien, \n              maximus a lobortis vel, faucibus quis lectus. \n              Integer luctus ex quis ex pulvinar, vel dignissim nunc pharetra. \n              Etiam tempus ultrices tortor. \n            </div>\n          </ParallaxLayer>\n          <ParallaxLayer offset={2} caption=\"projects\" speed={0.25} onClick={() => this.scroll(0)}>\n            <Projects />\n          </ParallaxLayer>\n        </Parallax>\n      </Layout>\n    );\n  }\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      // marginBottom: `1rem`,  \n      // marginLeft: `80%`,\n      // marginRight: `5%`\n    }}\n  >\n    <div style={{ margin: 5 }}>\n      <Link\n        to=\"/about\"\n        style={{\n          color: `black`,\n          fontSize: `1em`,\n          textDecoration: `underline`,\n          paddingRight: `10px`\n        }}\n      >\n        about\n      </Link>\n      <Link\n        to=\"/projects\"\n        style={{\n          color: `black`,\n          fontSize: `1em`,\n          textDecoration: `underline`,\n          paddingRight: `10px`\n        }}\n      >\n        projects\n      </Link>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            // margin: `0 auto`,\n            // maxWidth: 960,\n            // padding: `0px 1.0875rem 1.45rem`,\n            // paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          {/* <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer> */}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}